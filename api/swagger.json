{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Project VLEJ",
        "description": "The documentation of the VLEJ API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [
        {
            "name": "Users",
            "description": "API for users in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get the info of a user by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "name": "name",
                        "in": "body",
                        "description": "Name of the user",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "body",
                        "description": "Email of the user, has to be unique",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "Password of the user",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "integer",
                                    "description": "The id of the deleted user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "name": "name",
                        "in": "body",
                        "description": "Name of the user",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "body",
                        "description": "Email of the user, has to be unique",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "Password of the user",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New user is created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "string",
                                    "description": "A message confirming the creation of the user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "name": "email",
                        "in": "body",
                        "description": "Email of the user",
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "Password of the user",
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "User is logged in",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "userId": {
                                    "type": "integer",
                                    "description": "Id of the user logged in"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "The auth token"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "required": [
                "_id",
                "id",
                "name",
                "email",
                "password"
            ],
            "properties": {
                "_id": {
                    "type": "string",
                    "uniqueItems": true
                },
                "id": {
                    "type": "integer",
                    "uniqueItems": true
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Users": {
            "type": "array",
            "$ref": "#/definitions/User"
        }
    }
}